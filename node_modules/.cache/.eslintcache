[{"/Users/hasamayoshihito/Documents/ETH-NFT-game/nft-game-starter-project/src/index.js":"1","/Users/hasamayoshihito/Documents/ETH-NFT-game/nft-game-starter-project/src/App.js":"2","/Users/hasamayoshihito/Documents/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js":"3","/Users/hasamayoshihito/Documents/ETH-NFT-game/nft-game-starter-project/src/constants.js":"4","/Users/hasamayoshihito/Documents/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js":"5","/Users/hasamayoshihito/Documents/ETH-NFT-game/nft-game-starter-project/src/Components/LoadingIndicator/index.js":"6"},{"size":219,"mtime":1649428689611,"results":"7","hashOfConfig":"8"},{"size":8263,"mtime":1649480416063,"results":"9","hashOfConfig":"8"},{"size":5492,"mtime":1649486484544,"results":"10","hashOfConfig":"8"},{"size":676,"mtime":1649486186998,"results":"11","hashOfConfig":"8"},{"size":5892,"mtime":1649486624588,"results":"12","hashOfConfig":"8"},{"size":261,"mtime":1649424182499,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1uobs2z",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/hasamayoshihito/Documents/ETH-NFT-game/nft-game-starter-project/src/index.js",[],["28","29"],"/Users/hasamayoshihito/Documents/ETH-NFT-game/nft-game-starter-project/src/App.js",["30"],"import LoadingIndicator from \"./Components/LoadingIndicator\";\nimport Arena from \"./Components/Arena\";\nimport myEpicGame from \"./utils/MyEpicGame.json\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"./constants\";\nimport React, { useEffect, useState } from \"react\";\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport \"./App.css\";\n// SelectCharacter に入っているファイルをインポートします。\nimport SelectCharacter from \"./Components/SelectCharacter\";\n\n\n// Constantsを宣言する: constとは値書き換えを禁止した変数を宣言する方法です。\nconst TWITTER_HANDLE = \"あなたのTwitterハンドル\";\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst App = () => {\n  // ユーザーのウォレットアドレスを格納するために使用する状態変数を定義します。\n  const [currentAccount, setCurrentAccount] = useState(null);\n  // characterNFT と setCharacterNFT を初期化します。\n  const [characterNFT, setCharacterNFT] = useState(null);\n  // ロード状態を初期化します。\nconst [isLoading, setIsLoading] = useState(false);\n\n\n\n  // ユーザーがRinkeby Network に接続されているか確認します。\n  // '4' は Rinkeby のネットワークコードです。\n  const checkNetwork = async () => {\n    try {\n      if (window.ethereum.networkVersion !== \"4\") {\n        alert(\"Rinkeby Test Network に接続してください!\");\n      } else {\n        console.log(\"Rinkeby に接続されています.\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // ユーザーがMetaMaskを持っているか確認します。\nconst checkIfWalletIsConnected = async () => {\n  try {\n    const { ethereum } = window;\n    if (!ethereum) {\n      console.log(\"Make sure you have MetaMask!\");\n\n      // 次の行でreturnを使用するため、ここでisLoadingを設定します。\n      setIsLoading(false);\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n\n      // accountsにWEBサイトを訪れたユーザーのウォレットアカウントを格納します。\n      // （複数持っている場合も加味、よって account's' と変数を定義している）\n      const accounts = await ethereum.request({ method: \"eth_accounts\" });\n\n      // もしアカウントが一つでも存在したら、以下を実行。\n      if (accounts.length !== 0) {\n        // accountという変数にユーザーの1つ目（=Javascriptでいう0番目）のアドレスを格納\n        const account = accounts[0];\n        console.log(\"Found an authorized account:\", account);\n\n        // currentAccountにユーザーのアカウントアドレスを格納\n        setCurrentAccount(account);\n      } else {\n        console.log(\"No authorized account found\");\n      }\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  //すべての関数ロジックの後に、state プロパティを解放します。\n  setIsLoading(false);\n};\n\n// レンダリングメソッド\nconst renderContent = () => {\n  // シナリオ1.\n  // ユーザーがWEBアプリにログインしていない場合、WEBアプリ上に、\"Connect Wallet to Get Started\" ボタンを表示します。\n  if (!currentAccount) {\n    return (\n      <div className=\"connect-wallet-container\">\n        <img src=\"https://i.imgur.com/yMocj5x.png\" alt=\"Pikachu\" />\n        <button\n          className=\"cta-button connect-wallet-button\"\n          onClick={connectWalletAction}\n        >\n          Connect Wallet to Get Started\n        </button>\n      </div>\n    );\n    // シナリオ2.\n    // ユーザーはWEBアプリにログインしており、かつ NFT キャラクターを持っていない場合、WEBアプリ上に、\"SelectCharacter Component\" を表示します。\n  } else if (currentAccount && !characterNFT) {\n    return <SelectCharacter setCharacterNFT={setCharacterNFT} />;\n    // シナリオ3.\n    // ーザーはWEBアプリにログインしており、かつ NFT キャラクターを持っている場合、\n    // Area でボスと戦います。\n  } else if (currentAccount && characterNFT) {\n    return <Arena characterNFT={characterNFT} setCharacterNFT={setCharacterNFT} />\n  }\n};\n\n  // connectWallet メソッドを実装します。\nconst connectWalletAction = async () => {\n  try {\n    const { ethereum } = window;\n    if (!ethereum) {\n      alert(\"MetaMask を ダウンロードしてください!\");\n      return;\n    }\n\n    // ユーザーがウォレットを持っているか確認します。\n    checkIfWalletIsConnected();\n\n    // ウォレットアドレスに対してアクセスをリクエストしています。\n    const accounts = await ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n\n    // ウォレットアドレスを currentAccount に紐付けます。\n    console.log(\"Connected\", accounts[0]);\n    setCurrentAccount(accounts[0]);\n\n    // ユーザーが Rinkeby に接続されているか確認します。\n    checkNetwork();\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n  // ページがロードされたときに useEffect()内の関数が呼び出されます。\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n\n  useEffect(() => {\n    // スマートコントラクトを呼び出す関数です。\n    const fetchNFTMetadata = async () => {\n      console.log(\"Checking for Character NFT on address:\", currentAccount);\n  \n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(\n        CONTRACT_ADDRESS,\n        myEpicGame.abi,\n        signer\n      );\n  \n      const txn = await gameContract.checkIfUserHasNFT();\n      if (txn.name) {\n        console.log(\"User has character NFT\");\n        setCharacterNFT(transformCharacterData(txn));\n      } else {\n        console.log(\"No character NFT found\");\n      }\n    };\n  \n    // 接続されたウォレットがある場合のみ、下記を実行します。\n    if (currentAccount) {\n      console.log(\"CurrentAccount:\", currentAccount);\n      fetchNFTMetadata();\n    }\n  }, [currentAccount]);\n\n\n// ページがロードされたときに useEffect()内の関数が呼び出されます。\nuseEffect(() => {\n\t// ページがロードされたら、即座にロード状態を設定するようにします。\n\tsetIsLoading(true);\n\tcheckIfWalletIsConnected();\n}, []);\n\n// ページがロードされたときに useEffect()内の関数が呼び出されます。\nuseEffect(() => {\n\t// スマートコントラクトを呼び出す関数です。\n\tconst fetchNFTMetadata = async () => {\n\t\tconsole.log('Checking for Character NFT on address:', currentAccount);\n\n\t\tconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\t\tconst signer = provider.getSigner();\n\t\tconst gameContract = new ethers.Contract(\n\t\tCONTRACT_ADDRESS,\n\t\tmyEpicGame.abi,\n\t\tsigner\n\t\t);\n\n\tconst txn = await gameContract.checkIfUserHasNFT();\n\tif (txn.name) {\n\t\tconsole.log('User has character NFT');\n\t\tsetCharacterNFT(transformCharacterData(txn));\n\t} else {\n\t\tconsole.log('No character NFT found');\n\t}\n\t// ユーザーが保持しているNFTの確認が完了したら、ロード状態を false に設定します。\n\tsetIsLoading(false);\n}\n}, [currentAccount]);\n\n  if (isLoading) {\n    return <LoadingIndicator />;\n  }else{\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"header-container\">\n            <p className=\"header gradient-text\">⚡️ METAVERSE GAME ⚡️</p>\n            <p className=\"sub-text\">プレイヤーと協力してボスを倒そう✨</p>\n            {/* renderContent メソッドを呼び出します。*/}\n            {renderContent()}\n          </div>\n          <div className=\"footer-container\">\n            <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n            <a\n              className=\"footer-text\"\n              href={TWITTER_LINK}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >{`built with @${TWITTER_HANDLE}`}</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n};\n\nexport default App;","/Users/hasamayoshihito/Documents/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js",["31","32"],"/Users/hasamayoshihito/Documents/ETH-NFT-game/nft-game-starter-project/src/constants.js",[],"/Users/hasamayoshihito/Documents/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js",["33"],"/Users/hasamayoshihito/Documents/ETH-NFT-game/nft-game-starter-project/src/Components/LoadingIndicator/index.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":178,"column":8,"nodeType":"40","messageId":"41","endLine":178,"endColumn":24},{"ruleId":"42","severity":1,"message":"43","line":108,"column":6,"nodeType":"44","endLine":108,"endColumn":20,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":117,"column":5,"nodeType":"48","endLine":117,"endColumn":75},{"ruleId":"42","severity":1,"message":"43","line":84,"column":4,"nodeType":"44","endLine":84,"endColumn":18,"suggestions":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'fetchNFTMetadata' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCharacterNFT'. Either include it or remove the dependency array. If 'setCharacterNFT' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["52"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},{"desc":"54","fix":"56"},"Update the dependencies array to be: [gameContract, setCharacterNFT]",{"range":"57","text":"58"},{"range":"59","text":"58"},[3500,3514],"[gameContract, setCharacterNFT]",[2401,2415]]